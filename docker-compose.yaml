version: "3"

networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: '177.7.0.0/16'

services:
  web:
    build:
      context: ./web
      dockerfile: ./Dockerfile
    container_name: online-web
    restart: always
    ports:
      - '443:443'
    command: [ 'nginx-debug', '-g', 'daemon off;' ]
    networks:
      network:
        ipv4_address: 177.7.0.11

  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    container_name: online-server
    restart: always
    ports:
      - '8888:8888'
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    networks:
      network:
        ipv4_address: 177.7.0.12

  mysql:
    image: mysql:8.0.21
    container_name: online-mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci #设置utf8字符集
    restart: always
    ports:
      - "3306:3306"  # host物理直接映射端口为13306
    environment:
      MYSQL_DATABASE: 'online' # 初始化启动时要创建的数据库的名称
      MYSQL_ROOT_PASSWORD: 'xsC4sdf43aX' # root管理员用户密码
    networks:
      network:
        ipv4_address: 177.7.0.13

  redis:
    image: redis:6.0.6
    container_name: online-redis # 容器名
    restart: always
    ports:
      - '6379:6379'
    networks:
      network:
        ipv4_address: 177.7.0.14
  mongodb:
    image: mongo:latest
    restart: always
    container_name: online-mongodb
    volumes:
      - $PWD/data/mongo/db:/data/db
      - $PWD/data/mongo/log:/var/log/mongodb
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: online
      MONGO_INITDB_ROOT_PASSWORD: 43invVDwfsd4
      MONGO_INITDB_DATABASE: online
    networks:
      network:
        ipv4_address: 177.7.0.15
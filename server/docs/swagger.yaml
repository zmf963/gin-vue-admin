basePath: /
definitions:
  config.AliyunOSS:
    properties:
      accessKeyId:
        type: string
      accessKeySecret:
        type: string
      basePath:
        type: string
      bucketName:
        type: string
      bucketUrl:
        type: string
      endpoint:
        type: string
    type: object
  config.AwsS3:
    properties:
      baseURL:
        type: string
      bucket:
        type: string
      pathPrefix:
        type: string
      region:
        type: string
      secretID:
        type: string
      secretKey:
        type: string
    type: object
  config.CORS:
    properties:
      mode:
        type: string
      whitelist:
        items:
          $ref: '#/definitions/config.CORSWhitelist'
        type: array
    type: object
  config.CORSWhitelist:
    properties:
      allow-credentials:
        type: boolean
      allow-headers:
        type: string
      allow-methods:
        type: string
      allow-origin:
        type: string
      expose-headers:
        type: string
    type: object
  config.Captcha:
    properties:
      imgHeight:
        description: 验证码高度
        type: integer
      imgWidth:
        description: 验证码宽度
        type: integer
      keyLong:
        description: 验证码长度
        type: integer
    type: object
  config.Casbin:
    properties:
      modelPath:
        description: 存放casbin模型的相对路径
        type: string
    type: object
  config.DB:
    properties:
      alias-name:
        type: string
      config:
        description: 高级配置
        type: string
      dbname:
        description: 数据库名
        type: string
      disable:
        type: boolean
      logMode:
        description: 是否开启Gorm全局日志
        type: string
      logZap:
        type: boolean
      maxIdleConns:
        description: 空闲中的最大连接数
        type: integer
      maxOpenConns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      type:
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Detail:
    properties:
      compareField:
        description: 需要比较时间的字段
        type: string
      interval:
        description: 时间间隔
        type: string
      tableName:
        description: 需要清理的表名
        type: string
    type: object
  config.Email:
    properties:
      from:
        description: 收件人
        type: string
      host:
        description: 服务器地址
        type: string
      isSSL:
        description: 是否SSL
        type: boolean
      nickname:
        description: 昵称
        type: string
      port:
        description: 端口
        type: integer
      secret:
        description: 密钥
        type: string
      to:
        description: 收件人:多个以英文逗号分隔
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        type: string
    type: object
  config.HuaWeiObs:
    properties:
      accessKey:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      path:
        type: string
      secretKey:
        type: string
    type: object
  config.JWT:
    properties:
      bufferTime:
        description: 缓冲时间
        type: integer
      expiresTime:
        description: 过期时间
        type: integer
      issuer:
        description: 签发者
        type: string
      signingKey:
        description: jwt签名
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: 本地文件路径
        type: string
    type: object
  config.Mongo:
    properties:
      db:
        description: 数据库名
        type: string
      url:
        description: Mongo_URL
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      dbname:
        description: 数据库名
        type: string
      logMode:
        description: 是否开启Gorm全局日志
        type: string
      logZap:
        description: 是否通过zap写入日志文件
        type: boolean
      maxIdleConns:
        description: 空闲中的最大连接数
        type: integer
      maxOpenConns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址
        type: string
      port:
        description: 端口
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Pgsql:
    properties:
      config:
        description: 高级配置
        type: string
      dbname:
        description: 数据库名
        type: string
      logMode:
        description: 是否开启Gorm全局日志
        type: string
      logZap:
        description: 是否通过zap写入日志文件
        type: boolean
      maxIdleConns:
        description: 空闲中的最大连接数
        type: integer
      maxOpenConns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Qiniu:
    properties:
      accessKey:
        description: 秘钥AK
        type: string
      bucket:
        description: 空间名称
        type: string
      imgPath:
        description: CDN加速域名
        type: string
      secretKey:
        description: 秘钥SK
        type: string
      useCdnDomains:
        description: 上传是否使用CDN上传加速
        type: boolean
      useHttps:
        description: 是否使用https
        type: boolean
      zone:
        description: 存储区域
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        description: redis的哪个数据库
        type: integer
      password:
        description: 密码
        type: string
    type: object
  config.Server:
    properties:
      aliyunOSS:
        $ref: '#/definitions/config.AliyunOSS'
      awsS3:
        $ref: '#/definitions/config.AwsS3'
      captcha:
        $ref: '#/definitions/config.Captcha'
      casbin:
        $ref: '#/definitions/config.Casbin'
      cors:
        $ref: '#/definitions/config.CORS'
        description: 跨域配置
      db-list:
        items:
          $ref: '#/definitions/config.DB'
        type: array
      email:
        $ref: '#/definitions/config.Email'
      excel:
        $ref: '#/definitions/config.Excel'
      huaWeiObs:
        $ref: '#/definitions/config.HuaWeiObs'
      jwt:
        $ref: '#/definitions/config.JWT'
      local:
        $ref: '#/definitions/config.Local'
        description: oss
      mongo:
        $ref: '#/definitions/config.Mongo'
      mysql:
        $ref: '#/definitions/config.Mysql'
        description: gorm
      pgsql:
        $ref: '#/definitions/config.Pgsql'
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        $ref: '#/definitions/config.Redis'
      system:
        $ref: '#/definitions/config.System'
      tencentCOS:
        $ref: '#/definitions/config.TencentCOS'
      timer:
        $ref: '#/definitions/config.Timer'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      dbType:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      env:
        description: 环境值
        type: string
      iplimitCount:
        type: integer
      iplimitTime:
        type: integer
      ossType:
        description: Oss类型
        type: string
      useMultipoint:
        description: 多点登录拦截
        type: boolean
    type: object
  config.TencentCOS:
    properties:
      baseURL:
        type: string
      bucket:
        type: string
      pathPrefix:
        type: string
      region:
        type: string
      secretID:
        type: string
      secretKey:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        description: CRON表达式
        type: string
      start:
        description: 是否启用
        type: boolean
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encodeLevel:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      logInConsole:
        description: 输出控制台
        type: boolean
      prefix:
        description: 日志前缀
        type: string
      showLine:
        description: 显示行
        type: boolean
      stacktraceKey:
        description: 栈名
        type: string
    type: object
  poc_manager.PocInfo:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      poc_level:
        type: string
      poc_name:
        type: string
      poc_type:
        type: string
      remarks:
        type: string
      tags:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  project.AppInfo:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: string
      developer:
        type: string
      link:
        type: string
      name:
        type: string
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
    type: object
  project.DocInfo:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      doc_name:
        type: string
      link:
        type: string
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
    type: object
  project.Domain:
    properties:
      _id:
        type: string
      addr:
        type: string
      alive:
        type: integer
      asn:
        type: string
      cdn:
        type: integer
      cidr:
        type: string
      cname:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      domain:
        type: string
      hostnames:
        items:
          type: string
        type: array
      ips:
        items:
          type: string
        type: array
      isp:
        type: string
      org:
        type: string
      os:
        type: string
      port_ids:
        items:
          type: string
        type: array
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      target_id_is_verify:
        type: boolean
      update_at:
        type: string
      whois:
        additionalProperties: true
        type: object
    type: object
  project.EmailInfo:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      email:
        type: string
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
    type: object
  project.Keys:
    properties:
      _id:
        type: string
      content:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      password:
        type: string
      password_type:
        type: string
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
      username:
        type: string
    type: object
  project.PathInfo:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      hostinfo:
        type: string
      path:
        type: string
      port_id:
        type: string
      remarks:
        type: string
      response_size:
        type: integer
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      update_at:
        type: string
      url:
        type: string
    type: object
  project.PortInfo:
    properties:
      _id:
        type: string
      alive:
        type: integer
      banner:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      domain_id:
        type: string
      favicons:
        type: string
      host:
        type: string
      hostinfo:
        type: string
      path_ids:
        items:
          type: string
        type: array
      port:
        type: string
      products:
        items:
          type: string
        type: array
      protocols:
        items:
          type: string
        type: array
      remarks:
        type: string
      screenshot:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      update_at:
        type: string
      url:
        type: string
    type: object
  project.ProjectInfo:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      end_time:
        type: string
      project_desc:
        type: string
      project_name:
        type: string
      remarks:
        type: string
      start_time:
        type: string
      tags:
        items:
          type: string
        type: array
      target_ids:
        items:
          type: string
        type: array
      task_ids:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  project.Target:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      domain_ids:
        items:
          type: string
        type: array
      project_ids:
        type: string
      remarks:
        type: string
      tags:
        items:
          type: string
        type: array
      target_name:
        type: string
      task_ids:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  project.TargetRelation:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      parent_target_id:
        type: string
      reg_rate:
        type: number
      remarks:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      target_name:
        type: string
      update_at:
        type: string
    type: object
  project.Task:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      hosts:
        type: string
      keyword:
        type: string
      ports:
        type: string
      project_id:
        type: string
      remarks:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      task_name:
        type: string
      tool_ext:
        additionalProperties: true
        type: object
      tools:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  project.WechatOfficialAccount:
    properties:
      _id:
        type: string
      account_principal:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: string
      link:
        type: string
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
      wechat_name:
        type: string
      wechat_number:
        type: string
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: 角色ID
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  request.AppInfoSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      developer:
        type: string
      link:
        type: string
      name:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        description: 权限id
        type: string
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        description: 方法
        type: string
      path:
        description: 路径
        type: string
    type: object
  request.ChangePasswordStruct:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.DocInfoSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      doc_name:
        type: string
      link:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
    type: object
  request.DomainSearch:
    properties:
      _id:
        type: string
      addr:
        type: string
      alive:
        type: integer
      asn:
        type: string
      cdn:
        type: integer
      cidr:
        type: string
      cname:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      domain:
        type: string
      hostnames:
        items:
          type: string
        type: array
      ips:
        items:
          type: string
        type: array
      isp:
        type: string
      orderKey:
        type: string
      org:
        type: string
      os:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      port_ids:
        items:
          type: string
        type: array
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      target_id_is_verify:
        type: boolean
      update_at:
        type: string
      whois:
        additionalProperties: true
        type: object
    type: object
  request.EmailInfoSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      email:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
    type: object
  request.Empty:
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        description: 角色ID
        type: string
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: number
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      dbType:
        description: 数据库类型
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    required:
    - dbName
    - userName
    type: object
  request.KeysSearch:
    properties:
      _id:
        type: string
      content:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      password:
        type: string
      password_type:
        type: string
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
      username:
        type: string
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.PageInfo:
    properties:
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.PathInfoSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      hostinfo:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        type: string
      port_id:
        type: string
      remarks:
        type: string
      response_size:
        type: integer
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      update_at:
        type: string
      url:
        type: string
    type: object
  request.PocInfoSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      poc_level:
        type: string
      poc_name:
        type: string
      poc_type:
        type: string
      remarks:
        type: string
      tags:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  request.PortInfoSearch:
    properties:
      _id:
        type: string
      alive:
        type: integer
      banner:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      domain_id:
        type: string
      favicons:
        type: string
      host:
        type: string
      hostinfo:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path_ids:
        items:
          type: string
        type: array
      port:
        type: string
      products:
        items:
          type: string
        type: array
      protocols:
        items:
          type: string
        type: array
      remarks:
        type: string
      screenshot:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      update_at:
        type: string
      url:
        type: string
    type: object
  request.ProjectInfoSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      end_time:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      project_desc:
        type: string
      project_name:
        type: string
      remarks:
        type: string
      start_time:
        type: string
      tags:
        items:
          type: string
        type: array
      target_ids:
        items:
          type: string
        type: array
      task_ids:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  request.Register:
    properties:
      authorityId:
        type: string
      authorityIds:
        items:
          type: string
        type: array
      headerImg:
        type: string
      nickName:
        type: string
      passWord:
        type: string
      userName:
        type: string
    type: object
  request.SearchApiParams:
    properties:
      apiGroup:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 排序方式:升序false(默认)|降序true
        type: boolean
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      orderKey:
        description: 排序
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: 角色ID
        type: string
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: string
        type: array
      id:
        type: integer
    type: object
  request.TargetRelationSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      parent_target_id:
        type: string
      reg_rate:
        type: number
      remarks:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      target_name:
        type: string
      update_at:
        type: string
    type: object
  request.TargetSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      domain_ids:
        items:
          type: string
        type: array
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      project_ids:
        type: string
      remarks:
        type: string
      tags:
        items:
          type: string
        type: array
      target_name:
        type: string
      task_ids:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  request.TaskSearch:
    properties:
      _id:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      hosts:
        type: string
      keyword:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      ports:
        type: string
      project_id:
        type: string
      remarks:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      task_name:
        type: string
      tool_ext:
        additionalProperties: true
        type: object
      tools:
        items:
          type: string
        type: array
      update_at:
        type: string
    type: object
  request.WechatOfficialAccountSearch:
    properties:
      _id:
        type: string
      account_principal:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      desc:
        type: boolean
      link:
        type: string
      orderKey:
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      remarks:
        type: string
      source:
        type: string
      tags:
        items:
          type: string
        type: array
      target_id:
        type: string
      update_at:
        type: string
      wechat_name:
        type: string
      wechat_number:
        type: string
    type: object
  response.Email:
    properties:
      body:
        description: 邮件内容
        type: string
      subject:
        description: 邮件标题
        type: string
      to:
        description: 邮件发送给谁
        type: string
    type: object
  response.SysAuthorityCopyResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
      oldAuthorityId:
        description: 旧角色ID
        type: string
    type: object
  system.ExaFileUploadAndDownload:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 编号
        type: string
      name:
        description: 文件名
        type: string
      tag:
        description: 文件标签
        type: string
      updatedAt:
        description: 更新时间
        type: string
      url:
        description: 文件地址
        type: string
    type: object
  system.SysApi:
    properties:
      apiGroup:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: string
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      title:
        description: 菜单名
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  system.SysOperationRecord:
    properties:
      agent:
        description: 代理
        type: string
      body:
        description: 请求Body
        type: string
      createdAt:
        description: 创建时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 请求ip
        type: string
      latency:
        description: 延迟
        type: string
      method:
        description: 请求方法
        type: string
      path:
        description: 请求路径
        type: string
      resp:
        description: 响应Body
        type: string
      status:
        description: 请求状态
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
      user_id:
        description: 用户id
        type: integer
    type: object
  system.SysUser:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: string
      baseColor:
        description: 基础颜色
        type: string
      createdAt:
        description: 创建时间
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除api
      tags:
      - SysApi
  /api/deleteApisByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除选中Api
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /app_info/createAppInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AppInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.AppInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建AppInfo
      tags:
      - AppInfo
  /app_info/deleteAppInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AppInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除AppInfo
      tags:
      - AppInfo
  /app_info/deleteAppInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AppInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除AppInfo
      tags:
      - AppInfo
  /app_info/findAppInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AppInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询AppInfo
      tags:
      - AppInfo
  /app_info/getAppInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AppInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AppInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取AppInfo列表
      tags:
      - AppInfo
  /app_info/updateAppInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AppInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.AppInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新AppInfo
      tags:
      - AppInfo
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 旧角色id, 新权限id, 新权限名, 新父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SysAuthorityCopyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拷贝成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 拷贝角色
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建角色
      tags:
      - Authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除角色
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取角色列表
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 设置角色资源权限
      tags:
      - Authority
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新角色信息
      tags:
      - Authority
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /casbin/UpdateCasbin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新角色api权限
      tags:
      - Casbin
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取权限列表
      tags:
      - Casbin
  /doc_info/createDocInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建DocInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.DocInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建DocInfo
      tags:
      - DocInfo
  /doc_info/deleteDocInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除DocInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除DocInfo
      tags:
      - DocInfo
  /doc_info/deleteDocInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除DocInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除DocInfo
      tags:
      - DocInfo
  /doc_info/findDocInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询DocInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询DocInfo
      tags:
      - DocInfo
  /doc_info/getDocInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取DocInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DocInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取DocInfo列表
      tags:
      - DocInfo
  /doc_info/updateDocInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新DocInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.DocInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新DocInfo
      tags:
      - DocInfo
  /domain/createDomain:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Domain
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Domain'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建Domain
      tags:
      - Domain
  /domain/deleteDomain:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Domain
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除Domain
      tags:
      - Domain
  /domain/deleteDomainByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Domain
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除Domain
      tags:
      - Domain
  /domain/findDomain:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询Domain
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询Domain
      tags:
      - Domain
  /domain/getDomainList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取Domain列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DomainSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取Domain列表
      tags:
      - Domain
  /domain/updateDomain:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Domain
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Domain'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新Domain
      tags:
      - Domain
  /email/emailTest:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 发送测试邮件
      tags:
      - System
  /email/sendEmail:
    post:
      parameters:
      - description: 发送邮件必须的参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.Email'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 发送邮件
      tags:
      - System
  /email_info/createEmailInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建EmailInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.EmailInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建EmailInfo
      tags:
      - EmailInfo
  /email_info/deleteEmailInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除EmailInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除EmailInfo
      tags:
      - EmailInfo
  /email_info/deleteEmailInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除EmailInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除EmailInfo
      tags:
      - EmailInfo
  /email_info/findEmailInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询EmailInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询EmailInfo
      tags:
      - EmailInfo
  /email_info/getEmailInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取EmailInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.EmailInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取EmailInfo列表
      tags:
      - EmailInfo
  /email_info/updateEmailInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新EmailInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.EmailInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新EmailInfo
      tags:
      - EmailInfo
  /fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: 传入文件里面id即可
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页文件列表
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 上传文件示例
      tags:
      - ExaFileUploadAndDownload
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"探测完成"}'
          schema:
            type: string
      summary: 初始化用户数据库
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"自动创建数据库成功"}'
          schema:
            type: string
      summary: 初始化用户数据库
      tags:
      - InitDB
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拉黑成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /keys/createKeys:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Keys
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Keys'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建Keys
      tags:
      - Keys
  /keys/deleteKeys:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Keys
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除Keys
      tags:
      - Keys
  /keys/deleteKeysByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Keys
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除Keys
      tags:
      - Keys
  /keys/findKeys:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询Keys
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询Keys
      tags:
      - Keys
  /keys/getKeysList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取Keys列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.KeysSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取Keys列表
      tags:
      - Keys
  /keys/updateKeys:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Keys
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Keys'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新Keys
      tags:
      - Keys
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 增加menu和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取指定角色menu
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /path_info/createPathInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建PathInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.PathInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建PathInfo
      tags:
      - PathInfo
  /path_info/deletePathInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除PathInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除PathInfo
      tags:
      - PathInfo
  /path_info/deletePathInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除PathInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除PathInfo
      tags:
      - PathInfo
  /path_info/findPathInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询PathInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询PathInfo
      tags:
      - PathInfo
  /path_info/getPathInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取PathInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PathInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取PathInfo列表
      tags:
      - PathInfo
  /path_info/updatePathInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新PathInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.PathInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新PathInfo
      tags:
      - PathInfo
  /poc_info/createPocInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建PocInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/poc_manager.PocInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建PocInfo
      tags:
      - PocInfo
  /poc_info/deletePocInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除PocInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除PocInfo
      tags:
      - PocInfo
  /poc_info/deletePocInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除PocInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除PocInfo
      tags:
      - PocInfo
  /poc_info/findPocInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询PocInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询PocInfo
      tags:
      - PocInfo
  /poc_info/getPocInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取PocInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PocInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取PocInfo列表
      tags:
      - PocInfo
  /poc_info/updatePocInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新PocInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/poc_manager.PocInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新PocInfo
      tags:
      - PocInfo
  /port_info/createPortInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建PortInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.PortInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建PortInfo
      tags:
      - PortInfo
  /port_info/deletePortInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除PortInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除PortInfo
      tags:
      - PortInfo
  /port_info/deletePortInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除PortInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除PortInfo
      tags:
      - PortInfo
  /port_info/findPortInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询PortInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询PortInfo
      tags:
      - PortInfo
  /port_info/getPortInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取PortInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PortInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取PortInfo列表
      tags:
      - PortInfo
  /port_info/updatePortInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新PortInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.PortInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新PortInfo
      tags:
      - PortInfo
  /project_info/createProjectInfo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建ProjectInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.ProjectInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建ProjectInfo
      tags:
      - ProjectInfo
  /project_info/deleteProjectInfo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除ProjectInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除ProjectInfo
      tags:
      - ProjectInfo
  /project_info/deleteProjectInfoByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除ProjectInfo
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除ProjectInfo
      tags:
      - ProjectInfo
  /project_info/findProjectInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询ProjectInfo
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询ProjectInfo
      tags:
      - ProjectInfo
  /project_info/getProjectInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取ProjectInfo列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ProjectInfoSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取ProjectInfo列表
      tags:
      - ProjectInfo
  /project_info/updateProjectInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新ProjectInfo
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.ProjectInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新ProjectInfo
      tags:
      - ProjectInfo
  /sysOperationRecord/createSysOperationRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysOperationRecord模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/findSysOperationRecord:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取SysOperationRecord列表
      tags:
      - SysOperationRecord
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"重启系统成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /target/createTarget:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Target
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Target'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建Target
      tags:
      - Target
  /target/deleteTarget:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Target
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除Target
      tags:
      - Target
  /target/deleteTargetByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Target
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除Target
      tags:
      - Target
  /target/findTarget:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询Target
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询Target
      tags:
      - Target
  /target/getTargetList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取Target列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.TargetSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取Target列表
      tags:
      - Target
  /target/updateTarget:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Target
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Target'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新Target
      tags:
      - Target
  /target_relation/createTargetRelation:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建TargetRelation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.TargetRelation'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建TargetRelation
      tags:
      - TargetRelation
  /target_relation/deleteTargetRelation:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除TargetRelation
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除TargetRelation
      tags:
      - TargetRelation
  /target_relation/deleteTargetRelationByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除TargetRelation
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除TargetRelation
      tags:
      - TargetRelation
  /target_relation/findTargetRelation:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询TargetRelation
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询TargetRelation
      tags:
      - TargetRelation
  /target_relation/getTargetRelationList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取TargetRelation列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.TargetRelationSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取TargetRelation列表
      tags:
      - TargetRelation
  /target_relation/updateTargetRelation:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新TargetRelation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.TargetRelation'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新TargetRelation
      tags:
      - TargetRelation
  /task/createTask:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Task'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建Task
      tags:
      - Task
  /task/deleteTask:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Task
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除Task
      tags:
      - Task
  /task/deleteTaskByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Task
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除Task
      tags:
      - Task
  /task/findTask:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询Task
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询Task
      tags:
      - Task
  /task/getTaskList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取Task列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.TaskSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取Task列表
      tags:
      - Task
  /task/updateTask:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.Task'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新Task
      tags:
      - Task
  /user/SetSelfInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - SysUser
  /user/resetPassword:
    post:
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更改用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /wechat_official_account/createWechatOfficialAccount:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建WechatOfficialAccount
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.WechatOfficialAccount'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 创建WechatOfficialAccount
      tags:
      - WechatOfficialAccount
  /wechat_official_account/deleteWechatOfficialAccount:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除WechatOfficialAccount
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 删除WechatOfficialAccount
      tags:
      - WechatOfficialAccount
  /wechat_official_account/deleteWechatOfficialAccountByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除WechatOfficialAccount
        in: body
        name: data
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 批量删除WechatOfficialAccount
      tags:
      - WechatOfficialAccount
  /wechat_official_account/findWechatOfficialAccount:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询WechatOfficialAccount
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 用id查询WechatOfficialAccount
      tags:
      - WechatOfficialAccount
  /wechat_official_account/getWechatOfficialAccountList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取WechatOfficialAccount列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.WechatOfficialAccountSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 分页获取WechatOfficialAccount列表
      tags:
      - WechatOfficialAccount
  /wechat_official_account/updateWechatOfficialAccount:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新WechatOfficialAccount
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/project.WechatOfficialAccount'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: 更新WechatOfficialAccount
      tags:
      - WechatOfficialAccount
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
